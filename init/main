#!/usr/bin/env bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Run the code inside a profile ($1) section i.e. `$BASH_FILES_DIR/config/profiles`
install_profile() {
    profile="$1"
    profiles_list="$BASH_FILES_DIR/config/profiles"
    if [[ ! -f "$profiles_list" ]]; then
        return 1
    fi

    if [[ $# -eq 0 ]]; then
        echo "Error: Must provide at least one of the profiles:"
        cat "$profiles_list" | grep "\["
        return 1
    fi

    if [[ ! -f "$profiles_list" ]]; then
        echo "Error: Profiles list not found at $profiles_list"
        return 1
    fi

    echo
    echo "== Installing profile $@ =="
    echo

    # Read the configuration file and extract commands for the given profile
    in_section=false
    while IFS= read -r line || [[ -n "$line" ]]; do
        # Check for section headers
        if [[ "$line" =~ ^\[(.*)\]$ ]]; then
            current_section="${BASH_REMATCH[1]}"
            if [[ "$current_section" == "$profile" ]]; then
                in_section=true
            else
                in_section=false
            fi
        elif $in_section; then
            # Execute the line if it's in the correct section and not empty
            if [[ -n "$line" ]]; then
                eval "$line"
                if [[ $? -ne 0 ]]; then
                    echo "Error: Command failed - $line"
                    return 1
                fi
            fi
        fi
    done < "$profiles_list"
}


source_files() {
  source $SCRIPT_DIR/.bflist
}

generate_file_list_and_source_files() {
    # Main script logic
    echo 
    echo "== Generating and sourcing files =="
    echo
    source $BASH_FILES_DIR/init/file_list_generator || (echo "ERROR: Can't source file_list_generator" && exit 1) && \
    run_generate_files                   && echo Files list generated ✔ || (echo "ERROR: generate_files failed!"; exit 1) && \
    source_files                         && echo Files sourced ✔ || (echo "ERROR: source_files failed!"; exit 1)
}